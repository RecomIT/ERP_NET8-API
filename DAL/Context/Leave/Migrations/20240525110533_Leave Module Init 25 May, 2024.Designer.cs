// <auto-generated />
using System;
using DAL.Context.Leave;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Context.Leave.Migrations
{
    [DbContext(typeof(LeaveModuleDbContext))]
    [Migration("20240525110533_Leave Module Init 25 May, 2024")]
    partial class LeaveModuleInit25May2024
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Leave_Module.Models.Domain.Balance.EmployeeLeaveBalance", b =>
                {
                    b.Property<long>("EmployeeLeaveBalanceId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("LeaveTypeId")
                        .HasColumnType("bigint");

                    b.Property<short>("LeaveYear")
                        .HasColumnType("smallint");

                    b.Property<string>("ApprovalRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LeaveApplied")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LeaveAvailed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LeavePeriodEnd")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LeavePeriodStart")
                        .HasColumnType("date");

                    b.Property<long?>("LeaveSettingId")
                        .HasColumnType("bigint");

                    b.Property<string>("LeaveTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalLeave")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("YearStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeLeaveBalanceId", "EmployeeId", "LeaveTypeId", "LeaveYear");

                    b.HasIndex(new[] { "EmployeeId", "LeaveTypeId", "LeaveSettingId", "StateStatus", "CompanyId", "OrganizationId" }, "IX_HR_EmployeeLeaveBalance_NonClusteredIndex");

                    b.ToTable("HR_EmployeeLeaveBalance");
                });

            modelBuilder.Entity("Leave_Module.Models.Domain.History.EmployeeLeaveHistory", b =>
                {
                    b.Property<long>("LeaveHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LeaveHistoryId"));

                    b.Property<string>("ApprovalRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint");

                    b.Property<string>("CancelRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CancelledBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CheckedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CheckedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Count")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeLeaveBalanceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeLeaveRequestId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LeaveDate")
                        .HasColumnType("date");

                    b.Property<long?>("LeaveSettingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LeaveTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("RejectedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectedRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ReplacementDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("WorkShiftId")
                        .HasColumnType("bigint");

                    b.HasKey("LeaveHistoryId");

                    b.HasIndex(new[] { "LeaveHistoryId", "CompanyId", "OrganizationId" }, "IX_HR_EmployeeLeaveHistory_NonClusteredIndex");

                    b.ToTable("HR_EmployeeLeaveHistory");
                });

            modelBuilder.Entity("Leave_Module.Models.Domain.Request.EmployeeLeaveRequest", b =>
                {
                    b.Property<long>("EmployeeLeaveRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmployeeLeaveRequestId"));

                    b.Property<string>("ActualFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDuringLeave")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("AppliedFromDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("AppliedToDate")
                        .HasColumnType("date");

                    b.Property<decimal>("AppliedTotalDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovalRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovedFromDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApprovedToDate")
                        .HasColumnType("date");

                    b.Property<string>("AttachmentFileNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentFileTypes")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AttachmentFiles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint");

                    b.Property<string>("CancelRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CancelledBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CheckedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CheckedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayLeaveType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmergencyPhoneNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeLeaveBalanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeLeaveCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EstimatedDeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HODId")
                        .HasColumnType("bigint");

                    b.Property<string>("HalfDayType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LeavePurpose")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("LeaveTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("LeaveTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("RejectedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectedRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("ReliverDesignationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReliverId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("SectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("SubSectionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SupervisorId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalApprovalDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeLeaveRequestId");

                    b.HasIndex(new[] { "EmployeeLeaveCode", "EmployeeId", "LeaveTypeId", "StateStatus", "CompanyId", "OrganizationId" }, "IX_HR_EmployeeLeaveRequest_NonClusteredIndex");

                    b.ToTable("HR_EmployeeLeaveRequest");
                });

            modelBuilder.Entity("Leave_Module.Models.Domain.Setup.LeaveSetting", b =>
                {
                    b.Property<long>("LeaveSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LeaveSettingId"));

                    b.Property<bool?>("AcquiredViaOffDayWork")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovalRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint");

                    b.Property<string>("CalculateBalanceBasedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("DaysBeforeTodayOpenForLeave")
                        .HasColumnType("smallint");

                    b.Property<short>("DaysPastTodayOpenForLeave")
                        .HasColumnType("smallint");

                    b.Property<decimal>("DaysPerCycle")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("DeadlineForUtilizationLeave")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("EmployeeTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileAttachedOption")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("GainDaysPerCycle")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCarryForward")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmationRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDayOffIncluded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHolidayIncluded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaveEncashable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMinimumDaysRequiredForFileAttached")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMinimumServicePeroid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProratedLeaveBalanceApplicable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRequiredEstimatedDeliveryDate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRequiredToApplyMinimumDaysBeforeEDD")
                        .HasColumnType("bit");

                    b.Property<string>("JobType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LeaveApplicableFor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("LeaveTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("MandatoryNumberOfDays")
                        .HasColumnType("bit");

                    b.Property<short?>("MaxDaysCarryForward")
                        .HasColumnType("smallint");

                    b.Property<short?>("MaxDaysLeaveAtATime")
                        .HasColumnType("smallint");

                    b.Property<string>("MaxDaysLeaveAtATimeBN")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short?>("MaxEncashablePercentage")
                        .HasColumnType("smallint");

                    b.Property<short?>("MaximumTimesInServicePeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("MinEncashablePercentage")
                        .HasColumnType("smallint");

                    b.Property<short?>("MinimumServicePeroid")
                        .HasColumnType("smallint");

                    b.Property<short?>("NoOfDays")
                        .HasColumnType("smallint");

                    b.Property<string>("NoOfDaysBN")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("RequestDaysBeforeTakingLeave")
                        .HasColumnType("smallint");

                    b.Property<short?>("RequiredDaysBeforeEDD")
                        .HasColumnType("smallint");

                    b.Property<short?>("RequiredDaysForFileAttached")
                        .HasColumnType("smallint");

                    b.Property<bool?>("ShowFullCalender")
                        .HasColumnType("bit");

                    b.Property<string>("StateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitOfServicePeroid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaveSettingId");

                    b.HasIndex("LeaveTypeId");

                    b.HasIndex(new[] { "CompanyId", "OrganizationId" }, "IX_HR_LeaveSetting_NonClusteredIndex");

                    b.ToTable("HR_LeaveSetting");
                });

            modelBuilder.Entity("Leave_Module.Models.Domain.Setup.LeaveType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int>("SerialNo")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ShortNameInBangali")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TitleInBengali")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Title", "CompanyId", "OrganizationId" }, "IX_HR_LeaveTypes_NonClusteredIndex");

                    b.ToTable("HR_LeaveTypes");
                });

            modelBuilder.Entity("Leave_Module.Models.Domain.Setup.LeaveSetting", b =>
                {
                    b.HasOne("Leave_Module.Models.Domain.Setup.LeaveType", "LeaveType")
                        .WithMany("LeaveSettings")
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Leave_Module.Models.Domain.Setup.LeaveType", b =>
                {
                    b.Navigation("LeaveSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
